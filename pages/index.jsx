import Head from "next/head";
import { useEffect, useState } from "react";
import { Carousel } from "../components/Carousel";
import { GET_CHARACTERS, GET_CHARACTERS_OFFSET } from "../api";

import styles from "../styles/Home.module.scss";
import { CardPersonagem } from "../components/CardPersonagem";
import { Button } from "../components/Button";

export default function Home() {
  const [characters, setCharacters] = useState({});
  const [pageSelected, setPageSelected] = useState(1);
  const [pages, setPages] = useState([]);
  const [totalPages, setTotalPages] = useState(0);
  const [startPage, setStartPage] = useState(0);
  const [endPage, setEndPage] = useState(5);

  const renderPagination = (numberOfPages) => {
    if (numberOfPages > 0) {
      const arrayPages = [];
      for (let i = 1; i <= numberOfPages; i++) {
        arrayPages.push(i);
      }
      setPages(arrayPages);
    }
  };

  const slicePages = () => pages.slice(startPage, endPage);

  const getCharactersByPage = (number) => {
    let offset;

    setPageSelected(number);

    if (number === 1) {
      offset = 0;
    }

    if (number !== 1) {
      offset = 20 * (number - 1) + (number - 2);
    }

    GET_CHARACTERS_OFFSET(offset).then((response) => setCharacters(response));
  };

  const getMorePages = () => {
    setStartPage((current) => current + 5)
    setEndPage((current) => current + 5)
  }

  const backToFirstPage = () => {
    setStartPage(0)
    setEndPage(5)
    getCharactersByPage(1)
  }

  useEffect(() => {
    const getCharacters = () => {
      GET_CHARACTERS().then((response) => {
        setCharacters(response);
        let numberPages = Math.ceil(response.total / response.limit);
        setTotalPages(numberPages);
        renderPagination(numberPages);
      });
    };

    getCharacters();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          type="text/css"
          charset="UTF-8"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css"
        />
        <link
          rel="stylesheet"
          type="text/css"
          href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css"
        />
      </Head>

      <section className={styles.banner}>
        <div className="container">
          <h1 className={styles.h1}>ConheÃ§a Nossos Personagens</h1>
        </div>
      </section>

      <section className="section">
        <div className="container">
          <Carousel />
        </div>
      </section>

      <section className="section sectionWhite">
        <div className="container">
          <h2 className="h2Black">Lista de Personagens da Marvel</h2>

          {characters && characters.results && (
            <>
              <div className={styles.characterWrapper}>
                {characters.results.map((character) => (
                  <CardPersonagem
                    key={character.id}
                    nome={character.name}
                    foto={character.thumbnail.path}
                  />
                ))}
              </div>

              <div className={styles.pagesWrapper}>
              {startPage !== 0 && <span onClick={backToFirstPage}
                    className={`${styles.pages} ${
                      pageSelected === 1 ? styles.pageSelected : ""
                    }`}>1</span>}
                {slicePages().map((page) => (
                  <span
                    onClick={() => getCharactersByPage(page)}
                    className={`${styles.pages} ${
                      pageSelected === page ? styles.pageSelected : ""
                    }`}
                    key={page}
                  >
                    {page}
                  </span>
                ))}
                <span onClick={getMorePages} className={styles.pagesMore}>...</span>
               <span onClick={() => getCharactersByPage(totalPages)}
                    className={`${styles.pages} ${
                      pageSelected === totalPages ? styles.pageSelected : ""
                    }`}>{totalPages}</span>
              </div>
            </>
          )}
        </div>
      </section>

      <section className="section sectionWhite">
        <div className={`container ${styles.sectionMastercard}`}>
          <h2 className="h2Big">Marvel Mastercard</h2>
          <p className="text">Desbloqueie seus super poderes</p>
          <div className={styles.imgMastercard}>
            <img src="./images/cards-fan-desktop.png" alt="#" />
          </div>
          <Button width={324}>Cadastre-se agora</Button>
          <a className={styles.link} href="#">
            Entenda como funciona
          </a>
        </div>
      </section>
    </>
  );
}
